{"version":3,"sources":["util.js","components/app-bar.js","components/editor.js","components/output-log.js","components/console-log.js","components/output.js","components/snackbar.js","components/action-bar.js","App.js","serviceWorker.js","index.js"],"names":["_safePrint","element","obj","concat","JSON","stringify","Array","isArray","toString","safePrint","data","returnData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","push","err","return","join","withStyles","theme","root","flexGrow","grow","leftIcon","marginRight","spacing","unit","rightIcon","marginLeft","iconSmall","fontSize","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","variant","CodeRounded_default","Typography_default","color","Button_default","disabled","href","target","size","aria-label","OpenInNewRounded_default","classNames","require","CSEditor","_this","this","_this$props","editorValue","container","noValidate","autoComplete","react_codemirror2","cm","options","mode","extraKeys","Ctrl-Space","onRunCode","getValue","autofocus","lineNumbers","indentUnit","indentWithTabs","tabSize","onChange","editor","onEditorChange","React","Component","display","flexWrap","card","minWidth","margin","outputValue","Card_default","CardContent_default","title","gutterBottom","component","Util","hr","backgroundColor","log","marginTop","info","fill","palette","primary","light","error","dark","consoleData","consoleItems","length","map","console","Fragment","key","id","ListItem_default","alignItems","type","InfoRounded_default","ErrorRounded_default","ListItemText_default","message","secondary","Divider_default","List_default","CSOutput","output_log","console_log","PureComponent","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","green","amber","icon","iconVariant","opacity","onClose","other","Object","objectWithoutProperties","Icon","SnackbarContent_default","assign","aria-describedby","action","IconButton_default","close","onClick","Close_default","appBar","top","bottom","toolbar","justifyContent","fabButton","zIndex","left","right","button","chip","fontWeight","Hidden_default","mdDown","Chip_default","label","Fab_default","onFabClick","PlayArrowRounded_default","onClearConsole","ClearRounded_default","DEFAULT_CODE","EMPTY_STATE","createMuiTheme","main","typography","fontFamily","useNextVariants","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClose","event","reason","setState","snackbarOpen","state","lastSavedValue","_this2","window","postMessage","prototype","slice","arguments","process","warn","addEventListener","e","_e$data","origin","toConsumableArray","removeEventListener","code","userFunctionValue","eval","_setConsoleData","stack","_this3","_this$state","styles","CssBaseline_default","app_bar","Grid_default","item","xs","sm","handleEditorChange","runCode","output","action_bar","clearConsole","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","snackbar","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad75cdd9.chunk.js","sourcesContent":["function _isObject(obj) {\n  return obj && typeof obj === \"object\";\n}\n\nfunction _safePrint(element) {\n  if (_isObject(element)) {\n    return `${JSON.stringify(element, null, 2)}`;\n  } else if (Array.isArray(element)) {\n    return element.toString();\n  } else {\n    return element;\n  }\n}\n\nexport function safePrint(data) {\n  let returnData = [];\n  if (data && Array.isArray(data)) {\n    for (let element of data) {\n      returnData.push(_safePrint(element));\n    }\n  } else {\n    returnData.push(_safePrint(data));\n  }\n  return returnData.join(\", \");\n}\n\nexport function captureConsole() {\n  window.console = {\n    log: function() {\n      window.postMessage(\n        {\n          data: [...arguments],\n          type: \"log\"\n        },\n        process.env.REACT_APP_ROOT_URL\n      );\n    },\n    warn: function() {\n      window.postMessage(\n        {\n          data: [...arguments],\n          type: \"warn\"\n        },\n        process.env.REACT_APP_ROOT_URL\n      );\n    },\n    error: function() {\n      window.postMessage(\n        {\n          data: [...arguments],\n          type: \"error\"\n        },\n        process.env.REACT_APP_ROOT_URL\n      );\n    }\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport CodeIcon from \"@material-ui/icons/CodeRounded\";\nimport OpenIcon from \"@material-ui/icons/OpenInNewRounded\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 16\n  }\n});\n\nfunction CSAppBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <CodeIcon className={classes.leftIcon} />\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            CS Editor\n          </Typography>\n          <Button disabled color=\"inherit\">\n            LOGIN\n          </Button>\n          <Button\n            href=\"https://github.com/shibulijack/cs-editor\"\n            target=\"_blank\"\n            color=\"default\"\n            size=\"small\"\n            aria-label=\"Open drawer\"\n          >\n            <OpenIcon\n              className={classNames(classes.leftIcon, classes.iconSmall)}\n            />\n            Github\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nCSAppBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(CSAppBar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\n\nrequire(\"../../node_modules/codemirror/mode/javascript/javascript\");\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  cm: {\n    fontSize: \"1.1rem\"\n  }\n});\n\nclass CSEditor extends React.Component {\n  render() {\n    const { classes, editorValue } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete=\"off\">\n        <CodeMirror\n          value={editorValue}\n          className={classes.cm}\n          options={{\n            mode: \"javascript\",\n            theme: \"base16-dark\",\n            extraKeys: {\n              \"Ctrl-Space\": cm => this.props.onRunCode(cm.getValue())\n            },\n            autofocus: true,\n            lineNumbers: true,\n            indentUnit: 2,\n            indentWithTabs: true,\n            tabSize: 2\n          }}\n          onChange={(editor, data, value) => this.props.onEditorChange(editor)}\n        />\n      </form>\n    );\n  }\n}\n\nCSEditor.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(CSEditor);\n","import React from \"react\";\nimport * as Util from \"../util\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n    margin: \"1.5rem\"\n  }\n});\n\nconst OutputLog = props => {\n  const { outputValue, classes } = props;\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Output\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {outputValue && Util.safePrint(outputValue.data)}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default withStyles(styles)(OutputLog);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport * as Util from \"../util\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InfoIcon from \"@material-ui/icons/InfoRounded\";\nimport ErrorIcon from \"@material-ui/icons/ErrorRounded\";\n\nconst styles = theme => ({\n  hr: {\n    backgroundColor: \"#202124\"\n  },\n  log: {\n    marginTop: \"0.5rem\",\n    fontSize: \"2rem\"\n  },\n  info: {\n    fill: theme.palette.primary.light\n  },\n  error: {\n    fill: theme.palette.error.dark\n  }\n});\n\nconst ConsoleLog = props => {\n  const { consoleData, classes } = props;\n  const consoleItems =\n    consoleData.length > 0 &&\n    consoleData.map(console => (\n      <React.Fragment key={console.id}>\n        <ListItem alignItems=\"flex-start\">\n          {console.type === \"log\" ? (\n            <InfoIcon className={classNames(classes.log, classes.info)} />\n          ) : (\n            <ErrorIcon className={classNames(classes.log, classes.error)} />\n          )}\n          <ListItemText\n            primary={Util.safePrint(console.message)}\n            secondary={console.type ? `console.${console.type}` : null}\n          />\n        </ListItem>\n        <Divider className={classes.hr} />\n      </React.Fragment>\n    ));\n  return consoleItems.length > 0 && <List component=\"ul\">{consoleItems}</List>;\n};\n\nexport default withStyles(styles)(ConsoleLog);\n","import React from \"react\";\n\nimport OutputLog from \"./output-log\";\nimport ConsoleLog from \"./console-log\";\n\nclass CSOutput extends React.PureComponent {\n  render() {\n    const { outputValue, consoleData } = this.props;\n    return (\n      <div className=\"log-wrapper\">\n        <OutputLog outputValue={outputValue} />\n        <ConsoleLog consoleData={consoleData} />\n      </div>\n    );\n  }\n}\n\nexport default CSOutput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    color: \"white\",\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 16\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});\n\nfunction CSSnackbar(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nCSSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\n};\n\nexport default withStyles(styles1)(CSSnackbar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport PlayIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport ClearIcon from \"@material-ui/icons/ClearRounded\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst styles = theme => ({\n  appBar: {\n    top: \"auto\",\n    bottom: 0\n  },\n  toolbar: {\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\"\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 16\n  },\n  chip: {\n    fontWeight: 600,\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  }\n});\n\nfunction CSActionBar(props) {\n  const { classes } = props;\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar} variant=\"dense\">\n        <Hidden mdDown>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            Press{\" \"}\n            <Chip\n              label=\"Ctrl + Space\"\n              className={classes.chip}\n              variant=\"outlined\"\n            />{\" \"}\n            to execute the code.\n          </Typography>\n        </Hidden>\n        <Fab\n          color=\"secondary\"\n          aria-label=\"Add\"\n          className={classes.fabButton}\n          onClick={props.onFabClick}\n        >\n          <PlayIcon />\n        </Fab>\n        <div>\n          <Button\n            variant=\"outlined\"\n            color=\"default\"\n            size=\"small\"\n            className={classes.button}\n            onClick={props.onClearConsole}\n          >\n            <ClearIcon\n              className={classNames(classes.leftIcon, classes.iconSmall)}\n            />\n            Clear console\n          </Button>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nCSActionBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(CSActionBar);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport * as Util from \"./util\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport CSAppBar from \"./components/app-bar\";\nimport CSEditor from \"./components/editor\";\nimport CSOutput from \"./components/output\";\nimport CSSnackbar from \"./components/snackbar\";\nimport CSActionBar from \"./components/action-bar\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst DEFAULT_CODE = `//Sample Javascript function\\n\\nfunction sum(a, b)\\n{\\n\\tconsole.log(a,b);\\n\\treturn a + b;\\n}\\n\\nsum(1,2);`;\nconst EMPTY_STATE = \"n/a\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#202124\"\n    },\n    type: \"dark\"\n  },\n  typography: {\n    fontSize: 14,\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '\"Source Sans Pro\"',\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    useNextVariants: true\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorValue: DEFAULT_CODE,\n      lastSavedValue: DEFAULT_CODE,\n      outputValue: {\n        data: EMPTY_STATE,\n        error: false\n      },\n      consoleData: [],\n      snackbarOpen: false\n    };\n  }\n\n  componentDidMount() {\n    Util.captureConsole();\n    window.addEventListener(\"message\", e => {\n      let { data, type } = e.data;\n      if (e.origin === process.env.REACT_APP_ROOT_URL && data) {\n        this.setState(state => ({\n          consoleData: [\n            ...state.consoleData,\n            {\n              id: state.consoleData.length,\n              message: data,\n              type: type\n            }\n          ]\n        }));\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"message\");\n  }\n\n  handleEditorChange(editor) {\n    let value = editor.getValue();\n    this.setState({\n      lastSavedValue: value ? value : \"\"\n    });\n  }\n\n  runCode(code) {\n    try {\n      // eslint-disable-next-line\n      let userFunctionValue = (0, eval)(code);\n\n      if (userFunctionValue) {\n        this.setState(state => ({\n          outputValue: { data: userFunctionValue, error: false }\n        }));\n      }\n    } catch (e) {\n      this.setState(state => ({\n        snackbarOpen: true,\n        outputValue: { data: e.message, error: true }\n      }));\n      this._setConsoleData(e.stack, \"error\");\n    }\n  }\n\n  clearConsole() {\n    this.setState({\n      consoleData: []\n    });\n  }\n\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ snackbarOpen: false });\n  };\n\n  _setConsoleData(message, type = \"log\") {\n    this.setState(state => ({\n      consoleData: [\n        ...state.consoleData,\n        {\n          id: state.consoleData.length,\n          message: message,\n          type: type\n        }\n      ]\n    }));\n  }\n\n  render() {\n    const {\n      editorValue,\n      lastSavedValue,\n      outputValue,\n      consoleData\n    } = this.state;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <CSAppBar />\n        <Grid container spacing={0}>\n          <Grid item xs={12} sm={6}>\n            <CSEditor\n              editorValue={editorValue}\n              onEditorChange={e => this.handleEditorChange(e)}\n              onRunCode={e => this.runCode(lastSavedValue, e)}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <CSOutput outputValue={outputValue} consoleData={consoleData} />\n          </Grid>\n        </Grid>\n        <CSActionBar\n          onFabClick={e => this.runCode(lastSavedValue, e)}\n          onClearConsole={e => this.clearConsole(e)}\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\"\n          }}\n          open={this.state.snackbarOpen}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n        >\n          <CSSnackbar\n            onClose={this.handleClose}\n            variant=\"error\"\n            message=\"Run time error\"\n          />\n        </Snackbar>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}